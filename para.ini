#the parameter file for Image Segmentation and Object Image analysis

##############################################################
###input and output setting

working_root=/home/hlc/Data/Qinghai-Tibet/beiluhe/beiluhe_planet/autoMapping

input_image_path = /home/hlc/Data/Qinghai-Tibet/beiluhe/beiluhe_planet/beiluhe_basin/201805/20180522_035755_3B_AnalyticMS_SR_mosaic_8bit_rgb_basinExt.tif

input_label_image = /home/hlc/Data/Qinghai-Tibet/beiluhe/thaw_slumps/train_polygons_for_planet_2018_revised_2019/raster_class_BLH_train_polygons_2018_v6.tif

# image segment scale, script will resample the original to this resolution (meter)
input_image_rescale = 3.0
# training_polygons includes all the training polygons (ground truth and non-ground truth)
training_polygons= /home/hlc/Data/Qinghai-Tibet/beiluhe/thaw_slumps/train_polygons_for_planet_2018_revised_2019/BLH_train_polygons_2018_v6.shp
# training_polygons_sub for getting the image subset. (equal to or a portion of the all training polygons)
training_polygons_sub= /home/hlc/Data/Qinghai-Tibet/beiluhe/thaw_slumps/train_polygons_for_planet_2018_revised_2019/BLH_train_polygons_2018_v6.shp

# the sub images for traing (relative path in the current folder)
input_train_dir= subImages
# the sub label images for training (relative path in the current folder)
input_label_dir= subLabels

# the folder containing images for inference
inf_images_dir=/home/hlc/Data/Qinghai-Tibet/beiluhe/beiluhe_planet/beiluhe_basin/201805


## the following for calcuating topography and hydrology information,
## if don't have the file, leave the value as nothing instead remove (or comment)
dem_file = /home/hlc/Data/Qinghai-Tibet/beiluhe/DEM/srtm_30/beiluhe_strm30_prj_utm.tif

slope_file = /home/hlc/Data/Qinghai-Tibet/beiluhe/DEM/srtm_30/beiluhe_strm30_prj_slope_utm.tif

aspect_file =

flow_accumulation =

###end input and output setting
##############################################################


##############################################################
## taining parameter
batch_size=8
# experiment name
expr_name=exp10
# the number of iteration
iteration_num=30000

# data augmentaion # flip, rotate, blur, crop, scale
data_augmentation = flip,blur,crop,scale,rotate
# ignore class when perform data augmentation, multiple class will be support in future
data_aug_ignore_classes=class_0

# class number (without background)
NUM_CLASSES_noBG = 1


#base_learning_rate
# Use 0.007 when training on PASCAL augmented training set, train_aug. When
# fine-tuning on PASCAL trainval set, use learning rate=0.0001. (from deeplab train.py)
base_learning_rate=0.007

# For `xception_65`, use atrous_rates = [12, 24, 36] if output_stride = 8, or
# rates = [6, 12, 18] if output_stride = 16. Note one could use different
# atrous_rates/output_stride during training/evaluation. (from deeplab train.py)
output_stride=16
atrous_rates1=6
atrous_rates2=12
atrous_rates3=18

# 1 for export multi scale frozen inference graph, 0 for single-scale
export_multi_scale = 1
# which saved snapshot will be exported to the frozen graph, can be equal to less than iteration_num
export_iteration_num=30000
# batch size for inference
inf_batch_size=1

##############################################################


##############################################################
###pre-processing parameters
#buffer size for extending the training polygon, in the projection, normally, it is based on meters
buffer_size = 300

#whether use the rectangular extent of the polygon, set "--rectangle" on right if Yes, or omit it if NO
b_use_rectangle = --rectangle

#the nodata in output images
dst_nodata = 255

# image format for spliting images: .tif or .png
split_image_format = .png
## patch width and height of training images (eg. 480=160+160*2)
train_patch_width = 160
train_patch_height = 160
train_pixel_overlay_x = 160
train_pixel_overlay_y = 160

## patch with, height, and pixel_overlay of inference images (eg. )
#  480=352+2*64 (width)
#  480=352+2*64 (height)
# the expected width of patch (70)
inf_patch_width= 160
# the expected height of patch (70)
inf_patch_height=160
# the overlay of patch in pixel (210)
inf_pixel_overlay_x=160
inf_pixel_overlay_y=160


## patch width and height of network (such as U-net)
#out_patch_width=480
#out_patch_height=480

###end pre-processing parameters
##############################################################


##############################################################
### Post processing and evaluation Parameters

# the minimum area of gully or other landforms, if any polygon small than minimum_gully_area, it will be removed
minimum_gully_area = 3000

# assuming ratio=height/width (suppose height > width), ratio belong to [0,1], if any polygon has ratio greater than
#                     maximum_ratio_width_height, it will be removed
maximum_ratio_width_height = 1.0

# the more narrow, the ratio (=perimeter^2/area) is larger
minimum_ratio_perimeter_area = 0

# keep holes
b_keep_holes=YES

# validation files for evaluation
validation_shape = /home/hlc/Data/Qinghai-Tibet/beiluhe/thaw_slumps/train_polygons_for_planet_2018_revised_2019/identified_thawslumps_utm.shp

IOU_threshold = 0.5

#end Post processing and evaluation Parameters
##############################################################

##############################################################
### QGIS Parameters Setting linux: /usr    mac: /Applications/QGIS.app/Contents/MacOS

#end QGIS Parameters Setting
##############################################################
